<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Release Notes on poiu – Java Libraries</title><link>https://poiu-de.github.io/coat/release_notes/</link><description>Recent content in Release Notes on poiu – Java Libraries</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://poiu-de.github.io/coat/release_notes/index.xml" rel="self" type="application/rss+xml"/><item><title>0.0.1</title><link>https://poiu-de.github.io/coat/release_notes/0.0.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/release_notes/0.0.1/</guid><description>First public release.</description></item><item><title>0.0.2</title><link>https://poiu-de.github.io/coat/release_notes/0.0.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/release_notes/0.0.2/</guid><description>CoatConfig#validate() now checks whether config values can be converted to their corresponding type.
The generated config classes now provide a method writeExampleConfig to write an example config (in a syntax valid for Java .properties files) to a provided Writer.
The annotation processor now generates an example .properties file for each annotated interface.
The annotation processor now adds an equals() and hashCode() method to each generated class.
A new annotation @Coat.</description></item><item><title>0.0.3</title><link>https://poiu-de.github.io/coat/release_notes/0.0.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/release_notes/0.0.3/</guid><description>Use java.lang.System.Logger instead of java.util.logging.Logger in CoatConfig.
Correctly handle inherited accessor methods from multiple interfaces.
Accessor methods that are totally equal will only be generated once. Accessor methods that have the same name, but are otherwise not totally equal (e.g. differing return type or differing default value) prevent the generation.
Check that the same key is not used for different accessor methods.
Don’t try to generate a config from an interface which has methods that return void or accept parameters (as they can’t be used as accessors).</description></item><item><title>0.0.4</title><link>https://poiu-de.github.io/coat/release_notes/0.0.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/release_notes/0.0.4/</guid><description>The @Coat.Param annotation is now optional. All methods in an interface with the @Coat.Config annotation are now considered. The “key” will be inferred from the accessor method name if missing.
To influence the style of the inferred keys a CasingStrategy can be specified.
Arrays and Collection types are now supported.
Converters are provided for “boxed” primitives now.
Converters can be specified declaratively on the annotation level now (on @Coat.Config and @Coat.</description></item><item><title>1.0.0</title><link>https://poiu-de.github.io/coat/release_notes/1.0.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/release_notes/1.0.0/</guid><description>A new ListParser is provided for specifying comma-separated lists (ignoring whitespace around the commas). This CommaSeparatedListParser will not be used by default, but must explicitly be set on a @Coat.Config or @Coat.Param annotation or via CoatConfig#registerListParser(ListParser).
BREAKING CHANGE: The generated immutable config files will not have a public constructor anymore. Instead a builder will be generated to create config objects as well as static from(…) factory methods.
A config class can now be initialized via multiple config sources at once.</description></item><item><title>1.0.1</title><link>https://poiu-de.github.io/coat/release_notes/1.0.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/release_notes/1.0.1/</guid><description>Faster parsing of numeric values.
Correctly remove underscores from hex numbers if the numbers contain uppercase letters or numeric digits.</description></item><item><title>2.0.0</title><link>https://poiu-de.github.io/coat/release_notes/2.0.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/release_notes/2.0.0/</guid><description>Custom ListParsers on @Coat.Config annotation are now correctly applied to that class only. Previously they influenced all other classes, too.
A new default converter for URIs is provided by Coat.
The runtime performance of calling the accessor methods of the config object has been massively improved by executing all validation and type conversion at creation time of the config object.
BREAKING CHANGE: The publicly visible generated class in now not the concrete implementation of the config interface anymore, but instead the builder to create it.</description></item><item><title>2.0.1</title><link>https://poiu-de.github.io/coat/release_notes/2.0.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/release_notes/2.0.1/</guid><description>Support Java modules. The module name is de.poiu.coat.runtime.
Fix parsing of boolean value &amp;quot;1&amp;quot;.
Correctly close reader after usage.</description></item></channel></rss>